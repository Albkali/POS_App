// To parse this JSON data, do
//
//     final resCreateSell = resCreateSellFromJson(jsonString);

import 'package:meta/meta.dart';
import 'dart:convert';

List<ResCreateSell> resCreateSellFromJson(String str) => List<ResCreateSell>.from(json.decode(str).map((x) => ResCreateSell.fromJson(x)));

String resCreateSellToJson(List<ResCreateSell> data) => json.encode(List<dynamic>.from(data.map((x) => x.toJson())));

class ResCreateSell {
  ResCreateSell({
    required this.businessId,
    required this.locationId,
    required this.type,
    required this.status,
    required this.subStatus,
    required this.contactId,
    required this.customerGroupId,
    required this.invoiceNo,
    required this.refNo,
    required this.source,
    required this.totalBeforeTax,
    required this.transactionDate,
    required this.taxId,
    required this.discountType,
    required this.discountAmount,
    required this.taxAmount,
    required this.finalTotal,
    required this.additionalNotes,
    required this.staffNote,
    required this.createdBy,
    required this.document,
    required this.customField1,
    required this.customField2,
    required this.customField3,
    required this.customField4,
    required this.isDirectSale,
    required this.commissionAgent,
    required this.isQuotation,
    required this.shippingDetails,
    required this.shippingAddress,
    required this.shippingStatus,
    required this.deliveredTo,
    required this.shippingCharges,
    required this.shippingCustomField1,
    required this.shippingCustomField2,
    required this.shippingCustomField3,
    required this.shippingCustomField4,
    required this.shippingCustomField5,
    required this.exchangeRate,
    required this.sellingPriceGroupId,
    required this.payTermNumber,
    required this.payTermType,
    required this.isSuspend,
    required this.isRecurring,
    required this.recurInterval,
    required this.recurIntervalType,
    required this.subscriptionRepeatOn,
    required this.subscriptionNo,
    required this.recurRepetitions,
    required this.orderAddresses,
    required this.subType,
    required this.rpEarned,
    required this.rpRedeemed,
    required this.rpRedeemedAmount,
    required this.isCreatedFromApi,
    required this.typesOfServiceId,
    required this.packingCharge,
    required this.packingChargeType,
    required this.serviceCustomField1,
    required this.serviceCustomField2,
    required this.serviceCustomField3,
    required this.serviceCustomField4,
    required this.serviceCustomField5,
    required this.serviceCustomField6,
    required this.roundOffAmount,
    required this.importBatch,
    required this.importTime,
    required this.resTableId,
    required this.resWaiterId,
    required this.salesOrderIds,
    required this.preferPaymentMethod,
    required this.preferPaymentAccount,
    required this.isExport,
    required this.exportCustomFieldsInfo,
    required this.updatedAt,
    required this.createdAt,
    required this.id,
    required this.invoiceUrl,
    required this.paymentLink,
    required this.paymentLines,
    required this.sellLines,
    required this.contact,
  });

  String businessId;
  String locationId;
  String type;
  String status;
  String subStatus;
  String contactId;
  String customerGroupId;
  String invoiceNo;
  String refNo;
  String source;
  String totalBeforeTax;
  String transactionDate;
  String taxId;
  String discountType;
  String discountAmount;
  String taxAmount;
  String finalTotal;
  String additionalNotes;
  String staffNote;
  String createdBy;
  String document;
  String customField1;
  String customField2;
  String customField3;
  String customField4;
  String isDirectSale;
  String commissionAgent;
  String isQuotation;
  String shippingDetails;
  String shippingAddress;
  String shippingStatus;
  String deliveredTo;
  String shippingCharges;
 String shippingCustomField1;
 String shippingCustomField2;
 String shippingCustomField3;
 String shippingCustomField4;
 String shippingCustomField5;
  String exchangeRate;
 String sellingPriceGroupId;
 String payTermNumber;
 String payTermType;
  String isSuspend;
  String isRecurring;
  String recurInterval;
  String recurIntervalType;
  String subscriptionRepeatOn;
  String subscriptionNo;
  String recurRepetitions;
  String orderAddresses;
  String subType;
  String rpEarned;
  String rpRedeemed;
  String rpRedeemedAmount;
  String isCreatedFromApi;
  String typesOfServiceId;
  String packingCharge;
  String packingChargeType;
  String serviceCustomField1;
  String serviceCustomField2;
  String serviceCustomField3;
  String serviceCustomField4;
  String serviceCustomField5;
  String serviceCustomField6;
  String roundOffAmount;
  String importBatch;
  String importTime;
  String resTableId;
  String resWaiterId;
  String salesOrderIds;
  String preferPaymentMethod;
  String preferPaymentAccount;
  String isExport;
  String exportCustomFieldsInfo;
  String updatedAt;
  String createdAt;
  String id;
  String invoiceUrl;
  String paymentLink;
  List<PaymentLine> paymentLines;
  List<SellLine> sellLines;
  Contact contact;

  factory ResCreateSell.fromJson(Map<String, dynamic> json) => ResCreateSell(
    businessId: json["business_id"].toString(),
    locationId: json["location_id"].toString(),
    type: json["type"].toString(),
    status: json["status"].toString(),
    subStatus: json["sub_status"].toString(),
    contactId: json["contact_id"].toString(),
    customerGroupId: json["customer_group_id"].toString(),
    invoiceNo: json["invoice_no"].toString(),
    refNo: json["ref_no"].toString(),
    source: json["source"].toString(),
    totalBeforeTax: json["total_before_tax"].toDouble().toString(),
    transactionDate: DateTime.parse(json["transaction_date"]).toString(),
    taxId: json["tax_id"].toString(),
    discountType: json["discount_type"].toString(),
    discountAmount: json["discount_amount"].toString(),
    taxAmount: json["tax_amount"].toString(),
    finalTotal: json["final_total"].toDouble().toString(),
    additionalNotes: json["additional_notes"].toString(),
    staffNote: json["staff_note"].toString(),
    createdBy: json["created_by"].toString(),
    document: json["document"].toString(),
    customField1: json["custom_field_1"].toString(),
    customField2: json["custom_field_2"].toString(),
    customField3: json["custom_field_3"].toString(),
    customField4: json["custom_field_4"].toString(),
    isDirectSale: json["is_direct_sale"].toString(),
    commissionAgent: json["commission_agent"].toString(),
    isQuotation: json["is_quotation"].toString(),
    shippingDetails: json["shipping_details"].toString(),
    shippingAddress: json["shipping_address"].toString(),
    shippingStatus: json["shipping_status"].toString(),
    deliveredTo: json["delivered_to"].toString(),
    shippingCharges: json["shipping_charges"].toString(),
    shippingCustomField1: json["shipping_custom_field_1"].toString(),
    shippingCustomField2: json["shipping_custom_field_2"].toString(),
    shippingCustomField3: json["shipping_custom_field_3"].toString(),
    shippingCustomField4: json["shipping_custom_field_4"].toString(),
    shippingCustomField5: json["shipping_custom_field_5"].toString(),
    exchangeRate: json["exchange_rate"].toString(),
    sellingPriceGroupId: json["selling_price_group_id"].toString(),
    payTermNumber: json["pay_term_number"].toString(),
    payTermType: json["pay_term_type"].toString(),
    isSuspend: json["is_suspend"].toString(),
    isRecurring: json["is_recurring"].toString(),
    recurInterval: json["recur_interval"].toString(),
    recurIntervalType: json["recur_interval_type"].toString(),
    subscriptionRepeatOn: json["subscription_repeat_on"].toString(),
    subscriptionNo: json["subscription_no"].toString(),
    recurRepetitions: json["recur_repetitions"].toString(),
    orderAddresses: json["order_addresses"].toString(),
    subType: json["sub_type"].toString(),
    rpEarned: json["rp_earned"].toString(),
    rpRedeemed: json["rp_redeemed"].toString(),
    rpRedeemedAmount: json["rp_redeemed_amount"].toString(),
    isCreatedFromApi: json["is_created_from_api"].toString(),
    typesOfServiceId: json["types_of_service_id"].toString(),
    packingCharge: json["packing_charge"].toString(),
    packingChargeType: json["packing_charge_type"].toString(),
    serviceCustomField1: json["service_custom_field_1"].toString(),
    serviceCustomField2: json["service_custom_field_2"].toString(),
    serviceCustomField3: json["service_custom_field_3"].toString(),
    serviceCustomField4: json["service_custom_field_4"].toString(),
    serviceCustomField5: json["service_custom_field_5"].toString(),
    serviceCustomField6: json["service_custom_field_6"].toString(),
    roundOffAmount: json["round_off_amount"].toString(),
    importBatch: json["import_batch"].toString(),
    importTime: json["import_time"].toString(),
    resTableId: json["res_table_id"].toString(),
    resWaiterId: json["res_waiter_id"].toString(),
    salesOrderIds: json["sales_order_ids"].toString(),
    preferPaymentMethod: json["prefer_payment_method"].toString(),
    preferPaymentAccount: json["prefer_payment_account"].toString(),
    isExport: json["is_export"].toString(),
    exportCustomFieldsInfo: json["export_custom_fields_info"].toString(),
    updatedAt: json["updated_at"].toString(),
    createdAt: json["created_at"].toString(),
    id: json["id"].toString(),
    invoiceUrl: json["invoice_url"].toString(),
    paymentLink: json["payment_link"].toString(),
    paymentLines: List<PaymentLine>.from(json["payment_lines"].map((x) => PaymentLine.fromJson(x))),
    sellLines: List<SellLine>.from(json["sell_lines"].map((x) => SellLine.fromJson(x))),
    contact: Contact.fromJson(json["contact"]),
  );

  Map<String, dynamic> toJson() => {
    "business_id": businessId,
    "location_id": locationId,
    "type": type,
    "status": status,
    "sub_status": subStatus,
    "contact_id": contactId,
    "customer_group_id": customerGroupId,
    "invoice_no": invoiceNo,
    "ref_no": refNo,
    "source": source,
    "total_before_tax": totalBeforeTax,
    "transaction_date": transactionDate,
    "tax_id": taxId,
    "discount_type": discountType,
    "discount_amount": discountAmount,
    "tax_amount": taxAmount,
    "final_total": finalTotal,
    "additional_notes": additionalNotes,
    "staff_note": staffNote,
    "created_by": createdBy,
    "document": document,
    "custom_field_1": customField1,
    "custom_field_2": customField2,
    "custom_field_3": customField3,
    "custom_field_4": customField4,
    "is_direct_sale": isDirectSale,
    "commission_agent": commissionAgent,
    "is_quotation": isQuotation,
    "shipping_details": shippingDetails,
    "shipping_address": shippingAddress,
    "shipping_status": shippingStatus,
    "delivered_to": deliveredTo,
    "shipping_charges": shippingCharges,
    "shipping_custom_field_1": shippingCustomField1,
    "shipping_custom_field_2": shippingCustomField2,
    "shipping_custom_field_3": shippingCustomField3,
    "shipping_custom_field_4": shippingCustomField4,
    "shipping_custom_field_5": shippingCustomField5,
    "exchange_rate": exchangeRate,
    "selling_price_group_id": sellingPriceGroupId,
    "pay_term_number": payTermNumber,
    "pay_term_type": payTermType,
    "is_suspend": isSuspend,
    "is_recurring": isRecurring,
    "recur_interval": recurInterval,
    "recur_interval_type": recurIntervalType,
    "subscription_repeat_on": subscriptionRepeatOn,
    "subscription_no": subscriptionNo,
    "recur_repetitions": recurRepetitions,
    "order_addresses": orderAddresses,
    "sub_type": subType,
    "rp_earned": rpEarned,
    "rp_redeemed": rpRedeemed,
    "rp_redeemed_amount": rpRedeemedAmount,
    "is_created_from_api": isCreatedFromApi,
    "types_of_service_id": typesOfServiceId,
    "packing_charge": packingCharge,
    "packing_charge_type": packingChargeType,
    "service_custom_field_1": serviceCustomField1,
    "service_custom_field_2": serviceCustomField2,
    "service_custom_field_3": serviceCustomField3,
    "service_custom_field_4": serviceCustomField4,
    "service_custom_field_5": serviceCustomField5,
    "service_custom_field_6": serviceCustomField6,
    "round_off_amount": roundOffAmount,
    "import_batch": importBatch,
    "import_time": importTime,
    "res_table_id": resTableId,
    "res_waiter_id": resWaiterId,
    "sales_order_ids": salesOrderIds,
    "prefer_payment_method": preferPaymentMethod,
    "prefer_payment_account": preferPaymentAccount,
    "is_export": isExport,
    "export_custom_fields_info": exportCustomFieldsInfo,
    "updated_at": updatedAt,
    "created_at": createdAt,
    "id": id,
    "invoice_url": invoiceUrl,
    "payment_link": paymentLink,
    "payment_lines": List<dynamic>.from(paymentLines.map((x) => x.toJson())),
    "sell_lines": List<dynamic>.from(sellLines.map((x) => x.toJson())),
    "contact": contact.toJson(),
  };
}

class Contact {
  Contact({
    required this.id,
    required this.businessId,
    required this.type,
    required this.supplierBusinessName,
    required this.name,
    required this.prefix,
    required this.firstName,
    required this.middleName,
    required this.lastName,
    required this.email,
    required this.contactId,
    required this.contactStatus,
    required this.taxNumber,
    required this.city,
    required this.state,
    required this.country,
    required this.addressLine1,
    required this.addressLine2,
    required this.zipCode,
    required this.dob,
    required this.mobile,
    required this.landline,
    required this.alternateNumber,
    required this.payTermNumber,
    required this.payTermType,
    required this.creditLimit,
    required this.createdBy,
    required this.balance,
    required this.totalRp,
    required this.totalRpUsed,
    required this.totalRpExpired,
    required this.isDefault,
    required this.shippingAddress,
    required this.shippingCustomFieldDetails,
    required this.isExport,
    required this.exportCustomField1,
    required this.exportCustomField2,
    required this.exportCustomField3,
    required this.exportCustomField4,
    required this.exportCustomField5,
    required this.exportCustomField6,
    required this.position,
    required this.customerGroupId,
    required this.customField1,
    required this.customField2,
    required this.customField3,
    required this.customField4,
    required this.customField5,
    required this.customField6,
    required this.customField7,
    required this.customField8,
    required this.customField9,
    required this.customField10,
    required this.deletedAt,
    required this.createdAt,
    required this.updatedAt,
  });

  String id;
  String businessId;
  String type;
  String supplierBusinessName;
  String name;
  String prefix;
  String firstName;
  String middleName;
  String lastName;
  String email;
  String contactId;
  String contactStatus;
  String taxNumber;
  String city;
  String state;
  String country;
  String addressLine1;
  String addressLine2;
  String zipCode;
  String dob;
  String mobile;
  String landline;
  String alternateNumber;
  String payTermNumber;
  String payTermType;
  String creditLimit;
  String createdBy;
  String balance;
  String totalRp;
  String totalRpUsed;
  String totalRpExpired;
  String isDefault;
  String shippingAddress;
  String shippingCustomFieldDetails;
  String isExport;
 String exportCustomField1;
 String exportCustomField2;
 String exportCustomField3;
 String exportCustomField4;
 String exportCustomField5;
 String exportCustomField6;
 String position;
 String customerGroupId;
 String customField1;
 String customField2;
 String customField3;
 String customField4;
 String customField5;
 String customField6;
 String customField7;
 String customField8;
 String customField9;
 String customField10;
 String deletedAt;
  String createdAt;
  String updatedAt;

  factory Contact.fromJson(Map<String, dynamic> json) => Contact(
    id: json["id"].toString(),
    businessId: json["business_id"].toString(),
    type: json["type"].toString(),
    supplierBusinessName: json["supplier_business_name"].toString(),
    name: json["name"].toString(),
    prefix: json["prefix"].toString(),
    firstName: json["first_name"].toString(),
    middleName: json["middle_name"].toString(),
    lastName: json["last_name"].toString(),
    email: json["email"].toString(),
    contactId: json["contact_id"].toString(),
    contactStatus: json["contact_status"].toString(),
    taxNumber: json["tax_number"].toString(),
    city: json["city"].toString(),
    state: json["state"].toString(),
    country: json["country"].toString(),
    addressLine1: json["address_line_1"].toString(),
    addressLine2: json["address_line_2"].toString(),
    zipCode: json["zip_code"].toString(),
    dob: json["dob"].toString(),
    mobile: json["mobile"].toString(),
    landline: json["landline"].toString(),
    alternateNumber: json["alternate_number"].toString(),
    payTermNumber: json["pay_term_number"].toString(),
    payTermType: json["pay_term_type"].toString(),
    creditLimit: json["credit_limit"].toString(),
    createdBy: json["created_by"].toString(),
    balance: json["balance"].toString(),
    totalRp: json["total_rp"].toString(),
    totalRpUsed: json["total_rp_used"].toString(),
    totalRpExpired: json["total_rp_expired"].toString(),
    isDefault: json["is_default"].toString(),
    shippingAddress: json["shipping_address"].toString(),
    shippingCustomFieldDetails: json["shipping_custom_field_details"].toString(),
    isExport: json["is_export"].toString(),
    exportCustomField1: json["export_custom_field_1"].toString(),
    exportCustomField2: json["export_custom_field_2"].toString(),
    exportCustomField3: json["export_custom_field_3"].toString(),
    exportCustomField4: json["export_custom_field_4"].toString(),
    exportCustomField5: json["export_custom_field_5"].toString(),
    exportCustomField6: json["export_custom_field_6"].toString(),
    position: json["position"].toString(),
    customerGroupId: json["customer_group_id"].toString(),
    customField1: json["custom_field1"].toString(),
    customField2: json["custom_field2"].toString(),
    customField3: json["custom_field3"].toString(),
    customField4: json["custom_field4"].toString(),
    customField5: json["custom_field5"].toString(),
    customField6: json["custom_field6"].toString(),
    customField7: json["custom_field7"].toString(),
    customField8: json["custom_field8"].toString(),
    customField9: json["custom_field9"].toString(),
    customField10: json["custom_field10"].toString(),
    deletedAt: json["deleted_at"].toString(),
    createdAt: json["created_at"].toString(),
    updatedAt: json["updated_at"].toString(),
  );

  Map<String, dynamic> toJson() => {
    "id": id,
    "business_id": businessId,
    "type": type,
    "supplier_business_name": supplierBusinessName,
    "name": name,
    "prefix": prefix,
    "first_name": firstName,
    "middle_name": middleName,
    "last_name": lastName,
    "email": email,
    "contact_id": contactId,
    "contact_status": contactStatus,
    "tax_number": taxNumber,
    "city": city,
    "state": state,
    "country": country,
    "address_line_1": addressLine1,
    "address_line_2": addressLine2,
    "zip_code": zipCode,
    "dob": dob,
    "mobile": mobile,
    "landline": landline,
    "alternate_number": alternateNumber,
    "pay_term_number": payTermNumber,
    "pay_term_type": payTermType,
    "credit_limit": creditLimit,
    "created_by": createdBy,
    "balance": balance,
    "total_rp": totalRp,
    "total_rp_used": totalRpUsed,
    "total_rp_expired": totalRpExpired,
    "is_default": isDefault,
    "shipping_address": shippingAddress,
    "shipping_custom_field_details": shippingCustomFieldDetails,
    "is_export": isExport,
    "export_custom_field_1": exportCustomField1,
    "export_custom_field_2": exportCustomField2,
    "export_custom_field_3": exportCustomField3,
    "export_custom_field_4": exportCustomField4,
    "export_custom_field_5": exportCustomField5,
    "export_custom_field_6": exportCustomField6,
    "position": position,
    "customer_group_id": customerGroupId,
    "custom_field1": customField1,
    "custom_field2": customField2,
    "custom_field3": customField3,
    "custom_field4": customField4,
    "custom_field5": customField5,
    "custom_field6": customField6,
    "custom_field7": customField7,
    "custom_field8": customField8,
    "custom_field9": customField9,
    "custom_field10": customField10,
    "deleted_at": deletedAt,
    "created_at": createdAt,
    "updated_at": updatedAt,
  };
}

class PaymentLine {
  PaymentLine({
    required this.id,
    required this.transactionId,
    required this.businessId,
    required this.isReturn,
    required this.amount,
    required this.method,
    required this.transactionNo,
    required this.cardTransactionNumber,
    required this.cardNumber,
    required this.cardType,
    required this.cardHolderName,
    required this.cardMonth,
    required this.cardYear,
    required this.cardSecurity,
    required this.chequeNumber,
    required this.bankAccountNumber,
    required this.paidOn,
    required this.createdBy,
    required this.paidThroughLink,
    required this.gateway,
    required this.isAdvance,
    required this.paymentFor,
    required this.parentId,
    required this.note,
    required this.document,
    required this.paymentRefNo,
    required this.accountId,
    required this.createdAt,
    required this.updatedAt,
  });

  int id;
  int transactionId;
  int businessId;
  int isReturn;
  String amount;
  String method;
  dynamic transactionNo;
  dynamic cardTransactionNumber;
  dynamic cardNumber;
  dynamic cardType;
  dynamic cardHolderName;
  dynamic cardMonth;
  dynamic cardYear;
  dynamic cardSecurity;
  dynamic chequeNumber;
  dynamic bankAccountNumber;
  DateTime paidOn;
  int createdBy;
  int paidThroughLink;
  dynamic gateway;
  int isAdvance;
  int paymentFor;
  dynamic parentId;
  dynamic note;
  dynamic document;
  String paymentRefNo;
  dynamic accountId;
  DateTime createdAt;
  DateTime updatedAt;

  factory PaymentLine.fromJson(Map<String, dynamic> json) => PaymentLine(
    id: json["id"],
    transactionId: json["transaction_id"],
    businessId: json["business_id"],
    isReturn: json["is_return"],
    amount: json["amount"],
    method: json["method"],
    transactionNo: json["transaction_no"],
    cardTransactionNumber: json["card_transaction_number"],
    cardNumber: json["card_number"],
    cardType: json["card_type"],
    cardHolderName: json["card_holder_name"],
    cardMonth: json["card_month"],
    cardYear: json["card_year"],
    cardSecurity: json["card_security"],
    chequeNumber: json["cheque_number"],
    bankAccountNumber: json["bank_account_number"],
    paidOn: DateTime.parse(json["paid_on"]),
    createdBy: json["created_by"],
    paidThroughLink: json["paid_through_link"],
    gateway: json["gateway"],
    isAdvance: json["is_advance"],
    paymentFor: json["payment_for"],
    parentId: json["parent_id"],
    note: json["note"],
    document: json["document"],
    paymentRefNo: json["payment_ref_no"],
    accountId: json["account_id"],
    createdAt: DateTime.parse(json["created_at"]),
    updatedAt: DateTime.parse(json["updated_at"]),
  );

  Map<String, dynamic> toJson() => {
    "id": id,
    "transaction_id": transactionId,
    "business_id": businessId,
    "is_return": isReturn,
    "amount": amount,
    "method": method,
    "transaction_no": transactionNo,
    "card_transaction_number": cardTransactionNumber,
    "card_number": cardNumber,
    "card_type": cardType,
    "card_holder_name": cardHolderName,
    "card_month": cardMonth,
    "card_year": cardYear,
    "card_security": cardSecurity,
    "cheque_number": chequeNumber,
    "bank_account_number": bankAccountNumber,
    "paid_on": paidOn.toIso8601String(),
    "created_by": createdBy,
    "paid_through_link": paidThroughLink,
    "gateway": gateway,
    "is_advance": isAdvance,
    "payment_for": paymentFor,
    "parent_id": parentId,
    "note": note,
    "document": document,
    "payment_ref_no": paymentRefNo,
    "account_id": accountId,
    "created_at": createdAt.toIso8601String(),
    "updated_at": updatedAt.toIso8601String(),
  };
}

class SellLine {
  SellLine({
    required this.id,
    required this.transactionId,
    required this.productId,
    required this.variationId,
    required this.quantity,
    required this.mfgWastePercent,
    required this.quantityReturned,
    required this.unitPriceBeforeDiscount,
    required this.unitPrice,
    required this.lineDiscountType,
    required this.lineDiscountAmount,
    required this.unitPriceIncTax,
    required this.itemTax,
    required this.taxId,
    required this.discountId,
    required this.lotNoLineId,
    required this.sellLineNote,
    required this.woocommerceLineItemsId,
    required this.soLineId,
    required this.soQuantityInvoiced,
    required this.resServiceStaffId,
    required this.resLineOrderStatus,
    required this.parentSellLineId,
    required this.childrenType,
    required this.subUnitId,
    required this.createdAt,
    required this.updatedAt,
  });

  int id;
  int transactionId;
  int productId;
  int variationId;
  int quantity;
  String mfgWastePercent;
  String quantityReturned;
  String unitPriceBeforeDiscount;
  String unitPrice;
  String lineDiscountType;
  String lineDiscountAmount;
  String unitPriceIncTax;
  String itemTax;
  dynamic taxId;
  dynamic discountId;
  dynamic lotNoLineId;
  String sellLineNote;
  dynamic woocommerceLineItemsId;
  dynamic soLineId;
  String soQuantityInvoiced;
  dynamic resServiceStaffId;
  dynamic resLineOrderStatus;
  dynamic parentSellLineId;
  String childrenType;
  dynamic subUnitId;
  DateTime createdAt;
  DateTime updatedAt;

  factory SellLine.fromJson(Map<String, dynamic> json) => SellLine(
    id: json["id"],
    transactionId: json["transaction_id"],
    productId: json["product_id"],
    variationId: json["variation_id"],
    quantity: json["quantity"],
    mfgWastePercent: json["mfg_waste_percent"],
    quantityReturned: json["quantity_returned"],
    unitPriceBeforeDiscount: json["unit_price_before_discount"],
    unitPrice: json["unit_price"],
    lineDiscountType: json["line_discount_type"],
    lineDiscountAmount: json["line_discount_amount"],
    unitPriceIncTax: json["unit_price_inc_tax"],
    itemTax: json["item_tax"],
    taxId: json["tax_id"],
    discountId: json["discount_id"],
    lotNoLineId: json["lot_no_line_id"],
    sellLineNote: json["sell_line_note"],
    woocommerceLineItemsId: json["woocommerce_line_items_id"],
    soLineId: json["so_line_id"],
    soQuantityInvoiced: json["so_quantity_invoiced"],
    resServiceStaffId: json["res_service_staff_id"],
    resLineOrderStatus: json["res_line_order_status"],
    parentSellLineId: json["parent_sell_line_id"],
    childrenType: json["children_type"],
    subUnitId: json["sub_unit_id"],
    createdAt: DateTime.parse(json["created_at"]),
    updatedAt: DateTime.parse(json["updated_at"]),
  );

  Map<String, dynamic> toJson() => {
    "id": id,
    "transaction_id": transactionId,
    "product_id": productId,
    "variation_id": variationId,
    "quantity": quantity,
    "mfg_waste_percent": mfgWastePercent,
    "quantity_returned": quantityReturned,
    "unit_price_before_discount": unitPriceBeforeDiscount,
    "unit_price": unitPrice,
    "line_discount_type": lineDiscountType,
    "line_discount_amount": lineDiscountAmount,
    "unit_price_inc_tax": unitPriceIncTax,
    "item_tax": itemTax,
    "tax_id": taxId,
    "discount_id": discountId,
    "lot_no_line_id": lotNoLineId,
    "sell_line_note": sellLineNote,
    "woocommerce_line_items_id": woocommerceLineItemsId,
    "so_line_id": soLineId,
    "so_quantity_invoiced": soQuantityInvoiced,
    "res_service_staff_id": resServiceStaffId,
    "res_line_order_status": resLineOrderStatus,
    "parent_sell_line_id": parentSellLineId,
    "children_type": childrenType,
    "sub_unit_id": subUnitId,
    "created_at": createdAt.toIso8601String(),
    "updated_at": updatedAt.toIso8601String(),
  };
}
